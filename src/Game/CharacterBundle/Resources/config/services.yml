parameters:
    character.characteritem.entity: Game\CharacterBundle\Entity\CharacterItem
    character.character.entity: Game\CharacterBundle\Entity\Character
    character.characteritem.class: Game\CharacterBundle\Manager\CharacterItemManager
    character.character.class: Game\CharacterBundle\Manager\CharacterManager
    character.xp.class: Game\CharacterBundle\Manager\XPManager
    character.roster.class: Game\CharacterBundle\Manager\RosterManager
    character.characterclass.class: Game\CharacterBundle\Manager\CharacterClassManager
    character.characterclass.entity: Game\CharacterBundle\Entity\CharacterClass
    character.portrait.class: Game\CharacterBundle\Manager\PortraitManager
    ## listeners ##
    character.character_restore_listener.class: Game\CharacterBundle\EventListener\CharacterRestoreListener
    character.character_shop_listener.class: Game\CharacterBundle\EventListener\CharacterShopListener
    character.character_xp_listener.class: Game\CharacterBundle\EventListener\CharacterXPListener

services:
    character.characteritem_manager:
        class: %character.characteritem.class%
        arguments: [%character.characteritem.entity%]
        parent: core.core_manager
        calls:
            - [ setWeaponManager, [ @item.weapon_manager ] ]
            - [ setArmorManager, [ @item.armor_manager ] ]
            - [ setPotionManager, [ @item.potion_manager ] ]

    character.character_manager:
        class: %character.character.class%
        arguments: [%character.character.entity%]
        parent: core.core_manager
        calls:
            - [ setRollManager, [ @core.roll_manager ] ]
            - [ setCharacterItemManager, [ @character.characteritem_manager ] ]

    character.xp_manager:
        class: %character.xp.class%
        arguments: []
        calls:
            - [ setCharacterManager, [ @character.character_manager ] ]

    character.roster_manager:
        class: %character.roster.class%
        arguments: [%character.character.entity%]
        parent: core.core_manager

    character.characterclass_manager:
        class: %character.characterclass.class%
        arguments: [%character.characterclass.entity%]
        parent: core.core_manager

    character.portrait_manager:
        class: %character.portrait.class%
        arguments: [%kernel.root_dir%]

    ## listeners ##

    character.character_restore.listener:
        class: %character.character_restore_listener.class%
        tags:
            - { name: kernel.event_listener, event: character.travel, method: onCharacterTravel }
            - { name: kernel.event_listener, event: character.rest, method: onCharacterRest }

    character.character_shop.listener:
        class: %character.character_shop_listener.class%
        tags:
            - { name: kernel.event_listener, event: character.buy, method: onCharacterBuy}
            - { name: kernel.event_listener, event: character.sell, method: onCharacterSell}

    character.character_xp.listener:
        class: %character.character_xp_listener.class%
        calls:
            - [ setXPManager, [ @character.xp_manager ] ]
        tags:
            - { name: kernel.event_listener, event: character.kill, method: onCharacterKill}